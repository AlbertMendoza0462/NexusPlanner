// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusPlanner.DAL;

#nullable disable

namespace NexusPlanner.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NexusPlanner.Models.ColaboradorProyecto", b =>
                {
                    b.Property<int>("ColaboradorProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColaboradorProyectoId"));

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ColaboradorProyectoId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ColaboradoresProyecto");

                    b.HasData(
                        new
                        {
                            ColaboradorProyectoId = 1,
                            ProyectoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            ColaboradorProyectoId = 2,
                            ProyectoId = 1,
                            UsuarioId = 3
                        },
                        new
                        {
                            ColaboradorProyectoId = 3,
                            ProyectoId = 2,
                            UsuarioId = 3
                        },
                        new
                        {
                            ColaboradorProyectoId = 4,
                            ProyectoId = 2,
                            UsuarioId = 4
                        },
                        new
                        {
                            ColaboradorProyectoId = 5,
                            ProyectoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            ColaboradorProyectoId = 6,
                            ProyectoId = 3,
                            UsuarioId = 5
                        });
                });

            modelBuilder.Entity("NexusPlanner.Models.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProyectoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("FechaFinal")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Proyectos");

                    b.HasData(
                        new
                        {
                            ProyectoId = 1,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4101),
                            FechaFinal = new DateOnly(2025, 3, 3),
                            Nombre = "Proyecto de ejemplo",
                            UsuarioId = 1
                        },
                        new
                        {
                            ProyectoId = 2,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4103),
                            FechaFinal = new DateOnly(2026, 6, 6),
                            Nombre = "Proyecto de ejemplo 1",
                            UsuarioId = 2
                        },
                        new
                        {
                            ProyectoId = 3,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4104),
                            FechaFinal = new DateOnly(2027, 9, 9),
                            Nombre = "Proyecto de ejemplo 2",
                            UsuarioId = 3
                        });
                });

            modelBuilder.Entity("NexusPlanner.Models.Solicitud", b =>
                {
                    b.Property<int>("SolicitudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudId"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("SolicitudId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Solicitudes");

                    b.HasData(
                        new
                        {
                            SolicitudId = 1,
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4188),
                            ProyectoId = 1,
                            UsuarioId = 4
                        },
                        new
                        {
                            SolicitudId = 2,
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4189),
                            ProyectoId = 1,
                            UsuarioId = 5
                        },
                        new
                        {
                            SolicitudId = 3,
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4190),
                            ProyectoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            SolicitudId = 4,
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4191),
                            ProyectoId = 2,
                            UsuarioId = 5
                        },
                        new
                        {
                            SolicitudId = 5,
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4192),
                            ProyectoId = 3,
                            UsuarioId = 1
                        },
                        new
                        {
                            SolicitudId = 6,
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4193),
                            ProyectoId = 3,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("NexusPlanner.Models.Tarea", b =>
                {
                    b.Property<int>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TareaId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("FechaFinal")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TareaId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tareas");

                    b.HasData(
                        new
                        {
                            TareaId = 1,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4151),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo",
                            ProyectoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            TareaId = 2,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4153),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 1",
                            ProyectoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            TareaId = 3,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4155),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 2",
                            ProyectoId = 1,
                            UsuarioId = 3
                        },
                        new
                        {
                            TareaId = 4,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4156),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 3",
                            ProyectoId = 1,
                            UsuarioId = 3
                        },
                        new
                        {
                            TareaId = 5,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4157),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 4",
                            ProyectoId = 2,
                            UsuarioId = 3
                        },
                        new
                        {
                            TareaId = 6,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4159),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 5",
                            ProyectoId = 2,
                            UsuarioId = 3
                        },
                        new
                        {
                            TareaId = 7,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4160),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 6",
                            ProyectoId = 2,
                            UsuarioId = 4
                        },
                        new
                        {
                            TareaId = 8,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4161),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 7",
                            ProyectoId = 2,
                            UsuarioId = 4
                        },
                        new
                        {
                            TareaId = 9,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4162),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 8",
                            ProyectoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            TareaId = 10,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4164),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 9",
                            ProyectoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            TareaId = 11,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4165),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 10",
                            ProyectoId = 3,
                            UsuarioId = 5
                        },
                        new
                        {
                            TareaId = 12,
                            Descripcion = "Esta es la descripción",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(4167),
                            FechaFinal = new DateOnly(2024, 9, 10),
                            Nombre = "Tarea de ejemplo 11",
                            ProyectoId = 3,
                            UsuarioId = 5
                        });
                });

            modelBuilder.Entity("NexusPlanner.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellido = "Mendoza",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "a@a.a",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(3865),
                            Nombre = "Albert",
                            Telefono = "8494736796"
                        },
                        new
                        {
                            UsuarioId = 2,
                            Apellido = "Mendoza",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "i@i.i",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(3898),
                            Nombre = "Iris",
                            Telefono = "8494736796"
                        },
                        new
                        {
                            UsuarioId = 3,
                            Apellido = "Mendoza",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "r@r.r",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(3917),
                            Nombre = "Ronald",
                            Telefono = "8494736796"
                        },
                        new
                        {
                            UsuarioId = 4,
                            Apellido = "Lopez",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "o@o.o",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(3937),
                            Nombre = "Oly",
                            Telefono = "8494736796"
                        },
                        new
                        {
                            UsuarioId = 5,
                            Apellido = "Nicole",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Correo = "j@j.j",
                            Estado = 1,
                            FechaCreacion = new DateTime(2024, 3, 14, 11, 36, 44, 545, DateTimeKind.Local).AddTicks(3978),
                            Nombre = "Jarissa",
                            Telefono = "8494736796"
                        });
                });

            modelBuilder.Entity("NexusPlanner.Models.ColaboradorProyecto", b =>
                {
                    b.HasOne("NexusPlanner.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NexusPlanner.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NexusPlanner.Models.Proyecto", b =>
                {
                    b.HasOne("NexusPlanner.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NexusPlanner.Models.Solicitud", b =>
                {
                    b.HasOne("NexusPlanner.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NexusPlanner.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NexusPlanner.Models.Tarea", b =>
                {
                    b.HasOne("NexusPlanner.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NexusPlanner.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
